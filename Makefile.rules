# PROJECT should be set to the basename of the main file.
# eg. To build pacman.srec from pacman.s, use PROJECT=pacman
# Use DEPS to specify more dependencies. eg DEPS=ghost.s fruit.s
ifndef PROJECT
    $(error PROJECT not set)
endif

${PROJECT}.srec: ${PROJECT}.s ${DEPS} ../*.inc

${PROJECT}.bin: ${PROJECT}.s ${DEPS} ../*.inc

all: ${PROJECT}.srec ${PROJECT}.bin

ifdef ROM_PORT
    SET_ROM_PORT=--port ${ROM_PORT}
endif
.PHONY: rom
rom: ${PROJECT}.srec
	write-rom.py ${SET_ROM_PORT} ${PROJECT}.srec

clean:
	rm -f *.bin *.lst *.srec *.raw-srec

.DEFAULT_GOAL := ${PROJECT}.srec

# Assemble directly to a plain binary image.
#   -Fbin     - binary output file
#   -pad=255  - fill blanks with 0xff
#   -wdc02    - recognise WDC 65c02 instructions
#   -dotdir   - directives start with a dot
#   -L $*.lst - listing in $FILE.lst
#   -o $@     - output to $FILE.bin
%.bin : %.s
	vasm -Fbin -pad=255 -wdc02 -I../ -dotdir -L $*.lst -o $@ $<

# Assemble to a "raw" srec file.
#   -Fsrec    - SREC output file format
#   -s19      - S1/S9 16-bit records
#   -wdc02    - recognise WDC 65c02 instructions
#   -dotdir   - directives start with a dot
#   -dotdir   - directives start with a dot
#   -L $*.lst - listing in $FILE.lst
#   -o $@     - output to $FILE.bin
%.raw-srec : %.s
	vasm -Fsrec -s19 -wdc02 -I../ -dotdir -L $*.lst -o $@ $<

# Uncomment this to leave the raw-srec files behind
#.PRECIOUS: %.raw-srec

# Convert "raw" srec file to one suitable for our uploader..
# --Data_Only               - only S1 records, no S0/S5/S9 etc
# --Output_Block_Size=64    - Rom page size is 64 bytes, so make S1 blocks same size
# --Output_Block_Alignment  - Align blocks to 64 bytes where posssible
# --Offset -0x8000          - adjust the block addresses because rom starts at 0x8000
%.srec : %.raw-srec
	srec_cat --Data_Only --Output_Block_Size=64 --Output_Block_Alignment \
            --Output $@ $< -Offset -0x8000

